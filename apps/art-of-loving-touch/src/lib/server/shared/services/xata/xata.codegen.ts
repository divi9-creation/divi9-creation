// Generated by Xata Codegen 0.21.0. Please do not edit.
import { buildClient } from "@xata.io/client";
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

const tables = [
  {
    name: "leads",
    columns: [
      { name: "email", type: "email", unique: true },
      { name: "created_at", type: "datetime" },
      { name: "city", type: "string" },
      { name: "state", type: "string" },
      { name: "country", type: "string" },
      { name: "zip", type: "string" },
    ],
  },
  {
    name: "feature_flags",
    columns: [
      { name: "name", type: "string", unique: true },
      { name: "enabled", type: "bool" },
    ],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type Leads = InferredTypes["leads"];
export type LeadsRecord = Leads & XataRecord;

export type FeatureFlags = InferredTypes["feature_flags"];
export type FeatureFlagsRecord = FeatureFlags & XataRecord;

export type DatabaseSchema = {
  leads: LeadsRecord;
  feature_flags: FeatureFlagsRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL:
    "https://Divi9-Creation-s04f6f.us-east-1.xata.sh/db/art-of-loving-touch",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
